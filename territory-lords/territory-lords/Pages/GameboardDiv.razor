@page "/GridDiv/{gameBoardId}"
@using territory_lords.Data.Cache;
@using Microsoft.AspNetCore.WebUtilities;
@using territory_lords.Data.Models;
@inject NavigationManager NavManager
@inject GameBoardCache BoardCache


<style>
    #BoardWrapper {
        overflow: auto;
        padding: 50px;
        text-align: center;
        background-image: url("Images/ocean.jpg");
    }

    #BoardContainer {
        margin: auto;
        display: inline-block;
        background-color: seagreen;
    }

    .game-board-row {
        display: flex;
    }

    .game-board-tile {
        flex: 0 0 50px;
        width: 50px;
        height: 50px;
        display: inline-block;
    }

        .game-board-tile:not(.Ocean) {
            cursor: pointer;
        }

    .Ocean {
        background: url(Images/TER257.PIC_256_resized.png) 0px -500px;
    }

    .Ocean-top {
        background: url(Images/TER257.PIC_256_resized.png) -200px -500px;
    }

    .Ocean-right {
        background: url(Images/TER257.PIC_256_resized.png) -200px -500px;
        transform: rotate(90deg);
    }

    .Ocean-bottom {
        background: url(Images/TER257.PIC_256_resized.png) -200px -500px;
        transform: rotate(180deg);
    }

    .Ocean-left {
        background: url(Images/TER257.PIC_256_resized.png) -200px -500px;
        transform: rotate(-90deg);
    }

    .Ocean-single {
        background: url(Images/TER257.PIC_256_resized.png) -250px -550px;
    }

    .Ocean-bay-top {
        background: url(Images/TER257.PIC_256_resized.png) -700px -500px;
    }

    .Ocean-bay-right {
        background: url(Images/TER257.PIC_256_resized.png) -650px -500px;
        /*transform:rotate(90deg);*/
    }

    .Ocean-bay-bottom {
        background: url(Images/TER257.PIC_256_resized.png) -550px -500px;
        /*transform: rotate(180deg);*/
    }

    .Ocean-bay-left {
        background: url(Images/TER257.PIC_256_resized.png) -350px -500px;
        /*transform: rotate(270deg);*/
    }

    .Ocean-channel-horizontal {
        background: url(Images/TER257.PIC_256_resized.png) -250px -500px;
    }

    .Ocean-channel-vertical {
        background: url(Images/TER257.PIC_256_resized.png) -500px -500px;
    }

    .Ocean-elbow-top-right {
        background: url(Images/TER257.PIC_256_resized.png) -600px -500px;
    }

    .Ocean-elbow-bottom-right {
        background: url(Images/TER257.PIC_256_resized.png) -450px -500px;
    }

    .Ocean-elbow-bottom-left {
        background: url(Images/TER257.PIC_256_resized.png) -150px -500px;
    }

    .Ocean-elbow-top-left {
        background: url(Images/TER257.PIC_256_resized.png) -300px -500px;
    }

    .Grass {
        background: url(Images/TER257.PIC_256_resized.png) 0px -50px, url(Images/SP257.PIC_256_resized.png) 0px -200px;
    }

    .Desert {
        background: url(Images/TER257.PIC_256_resized.png) 0px 0px, url(Images/SP257.PIC_256_resized.png) 0px -200px;
    }

    .Jungle {
        background: url(Images/TER257.PIC_256_resized.png) 0px -450px, url(Images/SP257.PIC_256_resized.png) 0px -200px;
    }

    .Forrest {
        background: url(Images/TER257.PIC_256_resized.png) 0px -150px, url(Images/SP257.PIC_256_resized.png) 0px -200px;
    }

    .Hill {
        background: url(Images/TER257.PIC_256_resized.png) 0px -200px, url(Images/SP257.PIC_256_resized.png) 0px -200px;
    }

    .Mountain {
        background: url(Images/TER257.PIC_256_resized.png) 0px -250px, url(Images/SP257.PIC_256_resized.png) 0px -200px;
    }
</style>

<h1>Div layout of gameboard</h1>
<NavLink class="nav-link" href="@GetRandomGameBoardIdURL()">
    <span class="oi " aria-hidden="true"></span> New Random Board Init Once
</NavLink>
<DivGrid gameBoard="gameBoard" />

@code {
    [Parameter]
    public string gameBoardId { get; set; }


    GameBoard gameBoard;

    protected override void OnParametersSet()
    {
        gameBoard = BoardCache.GetGameBoard(gameBoardId);

        if(gameBoard == null)
        {
            gameBoard = new GameBoard(gameBoardId);
            BoardCache.UpdateGameCache(gameBoard);
        }

    }

    private string GetRandomGameBoardIdURL()
    {
        return $"GridDiv/{GetRandomNumberBetween(1, 11)}";
    }

    /// <summary>
    /// Gets a random number between two digits
    /// </summary>
    /// <param name="begin"></param>
    /// <param name="end"></param>
    /// <returns></returns>
    private int GetRandomNumberBetween(int begin, int end)
    {
        var rnd = new Random();
        return rnd.Next(begin, end);
    }
}
