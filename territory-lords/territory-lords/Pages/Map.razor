@page "/Map/{gameBoardId}"
@using territory_lords.Data.Cache;
@using Microsoft.AspNetCore.WebUtilities;
@using territory_lords.Data.Models;
@inject NavigationManager NavManager
@inject GameBoardCache BoardCache
@attribute [Authorize]

<h1>Game @GameBoardId</h1>
<NavLink class="nav-link" href="@GetRandomGameBoardIdURL()">
    <span class="oi " aria-hidden="true"></span> New Map
</NavLink>
<GameBoardDisplay TheGameBoard="TheGameBoard" />

@code {
    [Parameter]
    public string GameBoardId { get; set; }


    GameBoard? TheGameBoard;

    protected override void OnParametersSet()
    {
        TheGameBoard = BoardCache.GetGameBoard(GameBoardId);

        if(TheGameBoard == null)
        {
            TheGameBoard = new GameBoard(GameBoardId);
            BoardCache.UpdateGameCache(TheGameBoard);
        }

    }

    private string GetRandomGameBoardIdURL()
    {
        return $"Map/{GetRandomNumberBetween(1, 1000)}";
    }

    /// <summary>
    /// Gets a random number between two digits
    /// </summary>
    /// <param name="begin"></param>
    /// <param name="end"></param>
    /// <returns></returns>
    private int GetRandomNumberBetween(int begin, int end)
    {
        var rnd = new Random();
        return rnd.Next(begin, end);
    }
}
